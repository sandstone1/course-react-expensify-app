
//  we will need the uuid import for the AddExpense action generator
import uuid from 'uuid';

// we will need to set up the named exports
// format is " export const action generator name "



// ==============================
// ACTION GENERATOR #1
// ==============================


// we will destructure the first argument and if it doesn't exist we will destructure
// an empty object
// we can define all the things we want within the first {} within the argument
// we want the user to provide the value for description and note but if the user
// does not provide a value then an empty string will surfice
// next up, we default the amount to an appropriate value like 0
// next up, we default the createdAt to an appropriate value like 0 until we talk about
// timestamps
export const addExpense = (
    { 
        description = '',
        note        = '',
        amount      = 0,
        createdAt   = 0
    } = {} 
) => ( {
    type : 'ADD_EXPENSE',
    // the expense object will contain all the fields we need,
    // such as id, description, note, amount and createdAt, the last 4 fields
    // are going to come from the user and the id will be generated by our code

    // to generate a random id we will use the NPM UUID library and all we have to
    // do is install it and call the function and we'll be able to generate those IDs
    // however, later on, the IDs will come from the database
    
    // since the other 4 fields are generated by the user, we will pass those fields in
    // as an argument to the arrow function above
    expense : {
        id : uuid(),
        // we are using the property shorthand below
        description, // description = description
        note,        // note        = note
        amount,      // amount      = amount
        createdAt    // createdAt   = createdAt
    }
} );



// ==============================
// ACTION GENERATOR #2
// ==============================


// we need the id from the expense we are going to remove
export const removeExpense = ( { id } = {} ) => ( {
    type : 'REMOVE_EXPENSE',
    expense : {
        id : id
    }
} );




// ==============================
// ACTION GENERATOR #3
// ==============================


// pass in our 2 arguments: id and updates and neither need default values since we
// we don't have the ID and were not updating anything ( don't understand this last
// part ) 
export const editExpense = ( id, updates ) => ( {
    type : 'EDIT_EXPENSE',
    id, // remember this is equal to id : id
    updates // remember this is equal to updates : updates
} );






